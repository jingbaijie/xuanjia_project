/*
 * @LastEditors: zhanggao
 * @LastEditTime: 2020-07-31 09:59:07
 */
var transferObj = basePageInfo.transferObj;
var reqQuery = basePageInfo.reqQuery;
var page = {
    contentId : basePageInfo.commonPageInfo.pageInfo.commonPageId,
    videoListJSon : transferObj.videoListJSonData,
    cartoonData : transferObj.cartoonDetailData,
    cartoonId : transferObj.cartoonId,
    curPageMaxEListNum : transferObj.maxPageNum,
    curpageNum : reqQuery.curpageNum ? reqQuery.curpageNum : 1,
    episodeEnd : transferObj.episodeEnd,
    pageList: transferObj.pageList,
    maxEpisodeListNum : transferObj.maxEpisodeListNum,
    imgUrl : transferObj.localImg,
    curButtomList: transferObj.curButtomList,
    recRows: transferObj.recRows,
    recPage: 0,
    recStep: transferObj.recStep,
    recommendBottom:transferObj.pageInfo.recommendBottom,
    emptyImgUrl: transferObj.pageInfo.emptyImgUrl,
    userId:xjDataLog.getUserId(),
    disablePageNum:0,
    curEpisodeListNum:reqQuery.curEpisodeListNum ? reqQuery.curEpisodeListNum : 0,
    totalPage:transferObj.pageInfo.totalPage,
    toggleCollectStateFlag:true,
    
    init:function(){
        this.getVideoData();
        //获取收藏状态
        this.getCollectState();
    },
    
    getVideoData: function() {
        //视频框和收藏、播放按钮
        var videoListJSon = this.videoListJSon;
        var cartoonData = this.cartoonData;
        //所有集数信息
        try {
            //播放视频
            this.playSmallVideo();
            this.uploadVideoDetailLog({
                contentId: videoListJSon[0].cartoonId + "_" + videoListJSon[0].isFree,
                contentCname: videoListJSon[0].cartoonInfo.cartoonCname,
                contentEname: videoListJSon[0].cartoonInfo.cartoonEname,
                playId: videoListJSon[0].movieDetails[0].videoId + "_" + new Date().getTime(),
                playType: 1, 
                eventType: "start", 
                playName: videoListJSon[0].videoCname,
                spName: cartoonData.cspInfo.cpCname,
                spId: cartoonData.cspInfo.cpCode
            });
        } catch (e) {}

        //卡通的详细描述
        if (cartoonData) {
            //显示一屏集数
            this.showEpisodes(1,this.episodeEnd);
            //是否显示剧集集合按钮翻页箭头
            this.isShowTurnPageArrow();
            //推荐位下架判断
            this.isBooleanUp();
            // //初始化页面按钮
            PAGE.focusInit();
            PAGE.changeFocus("hands_x0_y0_videoBorder_");
            this.showData();  
        }
    },

    /**
    *  先获取收藏状态并显示
    *  contentType : 1    0-游戏，1-卡通，2-视频
    */
    getCollectState: function() {
        var _this = this;
        var data = {
            params: {
                userId: _this.userId,
                contentId: _this.cartoonId,
                contentType: 1
            },
            ajaxConfig: { async: true }
        }
        interface.findMediaCollectStatus(data, function(e) {
            if (e.data == 0 || e.data == "0") { //已收藏
                CT.$("collectImage").src = _this.imgUrl+"collect.png";
            } else { //未收藏
                CT.$("collectImage").src = _this.imgUrl+"nocollect.png";
            }
        })
    },
    toggleCollectState: function() {
        var _this = this;
        if (!_this.toggleCollectStateFlag) {
            return;
        }
        var data = {
            params: {
                userId: _this.userId,
                contentId: _this.cartoonId,
                contentType: 1
            },
            ajaxConfig: { async: true }
        }
        _this.toggleCollectStateFlag = false;
        interface.findMediaCollectStatus(data, function(e) {
            if (e.data == 0 || e.data == "0") { //已收藏
                _this.delCollect();
            } else { //未收藏
                _this.saveCollect();
            }
        })
    },
    /**
    *  添加用户收藏
    */
    saveCollect: function() {
        var _this = this;
        var params = {
            userId: _this.userId,
            contentId: _this.cartoonId,
            contentType: 1
        };
        interface.saveUserCollect(params, function(data) {
            if (data.successFlg == 1) { //1代表收藏成功或内容已经收藏
                CT.$("collectImage").src = _this.imgUrl+"collect.png";
                _this.toggleCollectStateFlag = true;
            } else {
                //收藏失败
            }
        });
    },
    /**
    *  删除收藏
    */
    delCollect: function() {
        var _this = this;
        var params = {
            userId: _this.userId,
            contentId: _this.cartoonId,
            contentType: 1
        };
        interface.deleteUserCollect(params, function(data) {
            if (data.successFlg == 1) { //删除成功
                CT.$("collectImage").src = _this.imgUrl+"nocollect.png";
                _this.toggleCollectStateFlag = true;
            } else {
                //删除失败
            }
        });
    },

    /**
    * 显示集数
    * 传一个起初和终结值，显示中间的所有集数
    * @param episodeBegin 显示集数的起点
    * @param episodeEnd  显示集数最大
    */
    showEpisodes: function(episodeBegin, episodeEnd) {
        var episode = "";
        var num = 0; //div定位使用
        for (var i = episodeBegin; i <= episodeEnd; i++) {
            episode += "<div class='episodes' style='top:8px;left:" + (num * 115) + "px;'>";
            num++;
            if (this.videoListJSon[i - 1].isFree == 0) { //免费图标
                // episode += "<img class='position' style='top:-17px;' src='../image/free.png'>";
            } else { //vip图标
                episode += "<img class='position vip'  src='"+this.imgUrl+"vip.png'>";
            }
            episode += i;
            episode += "</div>";
        }
        CT.$("episode").innerHTML = episode;
    },
    /**
    * 是否显示剧集集合按钮翻页箭头
    */
    isShowTurnPageArrow: function() {
        var _this = this;
        //最大分页数
        var maxPageNum = Math.ceil((_this.pageList.length || 0) / _this.maxEpisodeListNum);
        if (maxPageNum > _this.curpageNum) {
            //不是最后一个分页
            CT.$('trunPageTipImg') && (CT.$('trunPageTipImg').style.visibility = 'visible');
        } else {
            //是最后一个分页
            CT.$('trunPageTipImg') && (CT.$('trunPageTipImg').style.visibility = 'hidden');
        }
    },
    /**
    *  播放小视频
    */
    playSmallVideo: function() {
        var mediaCode = this.videoListJSon[0].movieDetails[0].playUrl;
        videoPlayer.SmallPlay({
            top: 68,
            left: 87,
            height: 212,
            width: 350,
            nns_ids: mediaCode, //合集媒资
            videoIndex: 0, //当前集数下标
            //上传小视频播放日志所用信息
            smallVideoInfo: this.videoListJSon[0]
        });
    },
    uploadVideoDetailLog: function(param) {
        var p = new logCollParam(parseInt((new Date().getTime()) - window.entryTime) / 1000);
        p.cartoonId = param.contentId;
        p.contentCname = param.contentCname;
        p.contentEname = param.contentEname;
        p.prevPageContentId="";
        p.prevPageContentType= "";
        p.prevPageEname= "";
        p.prevPageCname= "";        
        p.playId = param.playId;
        p.playType = param.playType; 
        p.eventType = param.eventType;
        p.playName = param.playName;
        p.contentType = "cartoon";
        p.spId = param.spId;
        p.spName = param.spName;
        p.stateTime = 0;
        xjDataLog.logCollection(ajax.jsonToString(p));
    },
    /**
    * 判断推荐位是否下架
    */
    isBooleanUp: function() {
        for (var i = 0; i < this.curButtomList.length; i++) {
            CT.isBooleanUp(this.curButtomList[i].booleanUp, "hands_x0_y0_buttom" + i + "_", "recommend");
        }
    },
    /**
    * 展示推荐位数据
    * */
    showData: function() {
        // 获取数据
        var arr = this.getCurData();
            // 清除数据
        this.clearData();
            // 渲染数据
        for (var i = 0; i < arr.length; i++) {
            // 赋值数据
            var ele = PAGE.getModelByFocusId('hands_x0_y0_buttom' + i + '_');
            ele.TempData = arr[i];
            ele.enFocus = true;
            CT.$('recBotImg' + i).src = AjaxConfig.imgUrl + arr[i].recommendPic.picPath;
            CT.$('contentTitle' + i).innerHTML = arr[i].recommendDisplayName.length > 8 ? arr[i].recommendDisplayName.slice(0, 8) : arr[i].recommendDisplayName;
            CT.$('contentTitle' + i).style.visibility = 'visible';
            if (arr[i].booleanFree == 0) {
                CT.addClass(CT.$("freeBadge" + i), 'freeBadge');
            } else {
                if (CT.hasClass(CT.$("freeBadge" + i), 'freeBadge')) {
                    CT.removeClass(CT.$("freeBadge" + i), 'freeBadge');
                }
            }
        }
        //地步数据下翻光标错误问题
        if (curFocus.FocusID.indexOf('hands_x0_y0_buttom') > -1) {
            var curBtnIndex = Number(curFocus.FocusID.substring(18, 19));
            if (curBtnIndex > arr.length - 1) {
                //当前光标超出渲染数据
                CT.$('buttom' + curBtnIndex).style.visibility = 'hidden';
                PAGE.changeFocus('hands_x0_y0_buttom' + (arr.length - 1) + '_');
            }
        }
    },
    /**
    * 点击 视频框、播放按钮、某一集，准备去全屏
    * 取数据 _this.list[_this.curEpisodeListNum][num]
    * 注：1.判断是否免费  0，免费，1收费
    *     2.收费先去鉴权，鉴权通过直接播放
    * @param num  num == "smallVideo" 小窗口，其他表示下面的选集
    */
    toPlayVideo: function(num) {
        var _this = this;
        interface.findUserForbiddenTime({ params: { userId: _this.userId }, ajaxConfig: { async: true } }, function(res) {
            _this.canWatch = res.data.canWatch;
            if (_this.canWatch) {
                _this.curEpisode = Number(num);
                //点击推荐位数据
                var curData = (num == "smallVideo") ? _this.videoListJSon[0] : (_this.pageList[_this.curEpisodeListNum][num]);
                var mediaCode = curData.movieDetails[0].playUrl;
                //添加全屏cookie
                var index = num == "smallVideo" ? 0 : Number(_this.pageList[_this.curEpisodeListNum][num].videoNumber) - 1;
                if (index < 9) {
                    var pageNo = 0;
                    var defaultFocus = "hands_x0_y0_number" + index + "_";
                } else {
                    var pageNo = index - 8;
                    var defaultFocus = "hands_x0_y0_number8_";
                }
                var params = {
                    pageNo: pageNo,
                    defaultFocus: defaultFocus
                };
                params = CT.jsonToString(params);
                CT.setCookie('listNotes', params);
                //记录返回
                PAGE.otherPageParam = "&contentId=" + _this.contentId + "&contentEName=" + basePageInfo.commonPageInfo.pageInfo.commPageEname + "&contentCName=" + basePageInfo.commonPageInfo.pageInfo.commPageCname + "&cartoonId=" + _this.cartoonId + "&curFocusId=" + curFocus.FocusID + "&curpageNum=" + _this.curpageNum + "&curEpisodeListNum=" + _this.curEpisodeListNum + "&curEpisode=" + _this.curEpisode;
                CT.goPage();
                _this.playVideo(curData);
            } else {
                //在禁播时间段，禁止观看
                CT.alertTip('小朋友要爱护自己的眼睛，现在是禁止观看时间哦~', { time: 3000 })
            }
        });
    },
    
    /**
    * 全屏
    * @param curData 全屏播放需要的数据
    */
    playVideo: function(curData) {
        var _this = this;
        //跳转
        curData.recommendDisplayType = 2; //页面类型2表示全屏页面
        curData.cartoonId = _this.cartoonId;
        CT.toAnterRecommendUrl(curData);
    },
    /**
    * 截取当前数据
    * */
    getCurData: function() {
        var startIndex = this.recPage * this.recStep
        var endIndex = startIndex + this.recStep * this.recRows
        if (endIndex > this.recommendBottom.length) {
            endIndex = this.recommendBottom.length
        }
        var newArr = this.recommendBottom.slice(startIndex, endIndex)
        return newArr
    },
    /**
    * 清除数据
    * */
    clearData: function() {
        for (var i = 0; i < this.recRows * this.recStep; i++) {
            CT.$('recBotImg' + i).src = this.emptyImgUrl;
            PAGE.getModelByFocusId('hands_x0_y0_buttom' + i + '_').enFocus = false
            CT.$('contentTitle' + i).innerHTML = '';
            CT.$('contentTitle' + i).style.visibility = 'hidden';
        }
    },
    /**
    *  切换页码光标
    *  @param num  当num不存在时是上部光标切换到页码光标、当num=1是第一页、num=_this.maxPageNum-1是最后一页码
    *  
    */
    togglePage: function(num) {
        var _this = this;
        if (!num) {
            if (_this.videoListJSon.length > 0) {
                PAGE.changeFocus("hands_x0_y0_page0_");
            } else {
                PAGE.changeFocus("hands_x0_y0_buttom0_");
            }
        } else if (num == 1) {
            if (_this.curpageNum > 1) { //需要翻页
                var pageNum = "";
                PAGE.focusArr["hands_x0_y0_page" + _this.disablePageNum + "_"].coo.right = "hands_x0_y0_page" + (_this.disablePageNum + 1) + "_";
                var maxPageNum = _this.maxEpisodeListNum;
                _this.curPageMaxEListNum = maxPageNum;
                _this.curpageNum--;
                for (var i = 0; i < maxPageNum; i++) {
                    //数字
                    pageNum += "<div class='pageNum' id='pageNum" + i + "'>" + (10 * ((_this.curpageNum - 1) * _this.maxEpisodeListNum + i) + 1) + "-" + (10 * ((_this.curpageNum - 1) * _this.maxEpisodeListNum + i + 1) < (_this.videoListJSon.length) ? 10 * ((_this.curpageNum - 1) * _this.maxEpisodeListNum + i + 1) : (_this.videoListJSon.length)) + "</div>";
                }
                CT.$("pageNum").innerHTML = pageNum;
                PAGE.changeFocus("hands_x0_y0_page0_");
            }
        } else if (num == _this.maxEpisodeListNum - 1) {
            if (_this.curpageNum * _this.maxEpisodeListNum < Math.ceil(_this.videoListJSon.length / 10)) { //需要翻页
                var pageNum = "";
                var remainPage = Math.ceil(_this.videoListJSon.length / 10) - (_this.curpageNum * _this.maxEpisodeListNum);
                var maxPageNum = remainPage > _this.maxEpisodeListNum ? _this.maxEpisodeListNum : remainPage;
                _this.curPageMaxEListNum = maxPageNum;
                for (var i = 0; i < maxPageNum; i++) {
                    //数字
                    pageNum += "<div class='pageNum' id='pageNum" + i + "'>" + (10 * (i + _this.maxEpisodeListNum*_this.curpageNum) + 1) + "-" + (10 * ((i + _this.maxEpisodeListNum*_this.curpageNum) + 1) < (_this.videoListJSon.length) ? 10 * ((i + _this.maxEpisodeListNum*_this.curpageNum) + 1) : (_this.videoListJSon.length)) + "</div>";
                }
                _this.curpageNum++;
                CT.$("pageNum").innerHTML = pageNum;
                PAGE.changeFocus("hands_x0_y0_page0_");
                if (maxPageNum != 6) {
                    PAGE.focusArr["hands_x0_y0_page" + (maxPageNum - 1) + "_"].coo.right = "disable";
                    _this.disablePageNum = maxPageNum - 1;
                }
            }
        } else {
            PAGE.changeFocus("hands_x0_y0_page" + _this.curEpisodeListNum + "_");
        }
        //是否显示剧集集合按钮翻页箭头
        _this.isShowTurnPageArrow();
    },
    /**
    *  切换每个页码对应的具体的某几集
    *  @param num 序号
    */
    toggleEpisode: function(num) {
        var _this = this;
        num = num || 0;
        //是否显示剧集集合按钮翻页箭头
        _this.isShowTurnPageArrow();
        _this.curEpisodeListNum = num;
        //先清空黄色字体样式
        _this.clearColor();
        //改变页码样式
        PAGE.addClass(CT.$("pageNum" + num), "pageColor");
        var episodeBegin = 10 * ((_this.curpageNum - 1) * _this.maxEpisodeListNum + num) + 1;
        var episodeEnd = CT.$("pageNum" + num).innerText;
        episodeEnd = parseInt(episodeEnd.slice(episodeEnd.indexOf("-") + 1, episodeEnd.length));
        //最后一个未禁止的焦点按钮下标
        var lastShowBtnIndex = Number(episodeEnd) - Number(episodeBegin);
        for (var index = 0; index < 10; index++) {
            if (index <= lastShowBtnIndex) {
                //集数按钮启用焦点
                PAGE.getModelByFocusId('hands_x0_y0_episode' + index + '_').enFocus = true;
            } else {
                //集数按钮禁用焦点
                PAGE.getModelByFocusId('hands_x0_y0_episode' + index + '_').enFocus = false;
            }
        }
        _this.showEpisodes(episodeBegin, episodeEnd);
    },
    /**
    * 显示集数
    * 传一个起初和终结值，显示中间的所有集数
    * @param episodeBegin 显示集数的起点
    * @param episodeEnd  显示集数最大
    */
    showEpisodes: function(episodeBegin, episodeEnd) {
        var _this = this;
        var episode = "";
        var num = 0; //div定位使用
        for (var i = episodeBegin; i <= episodeEnd; i++) {
            episode += "<div class='episodes' style='top:8px;left:" + (num * 115) + "px;'>";
            num++;
            if (_this.videoListJSon[i - 1].isFree == 0) { //免费图标
                // episode += "<img class='position' style='top:-17px;' src='../image/free.png'>";
            } else { //vip图标
                episode += "<img class='position vip'  src='"+_this.imgUrl+"vip.png'>";
            }
            episode += i;
            episode += "</div>";
        }
        CT.$("episode").innerHTML = episode;
    },
    /**
    * 是否显示剧集集合按钮翻页箭头
    */
    isShowTurnPageArrow: function() {
        //最大分页数
        var maxPageNum = Math.ceil((this.pageList.length || 0) / this.maxEpisodeListNum);
        if (maxPageNum > this.curpageNum) {
            //不是最后一个分页
            CT.$('trunPageTipImg') && (CT.$('trunPageTipImg').style.visibility = 'visible');
        } else {
            //是最后一个分页
            CT.$('trunPageTipImg') && (CT.$('trunPageTipImg').style.visibility = 'hidden');
        }
    },
    /**
    * 底部推荐向上，先判断卡通是否存在至少一集
    */
    buttomUpEvent: function(index) {
        var _this = this;
        if (_this.recPage > 0) {
            _this.recPage--
                _this.showData()
        } else {
            if (_this.videoListJSon.length > 0) {
                PAGE.changeFocus("hands_x0_y0_episode0_");
            } else {
                PAGE.changeFocus("hands_x0_y0_videoBorder_");
            }
        }
        _this.runText(curFocus.FocusID.split('_')[3].replace(/[^0-9]/ig, ""))
    },
    /**
    * 详情页推荐位向下事件
    * */
    buttomDownEvent: function(index) {
        var _this = this
        if (_this.recPage < _this.totalPage) {
            _this.recPage++
                _this.showData()
        }
        _this.runText(curFocus.FocusID.split('_')[3].replace(/[^0-9]/ig, ""))
    },
    //添加跑马灯
    runText: function(index) {
        var showTitle = " " + curFocus.TempData.recommendDisplayName;
        CT.$("contentTitle" + index).innerHTML = CT.setMarquee(showTitle, 16, 4);
    },
    //去除跑马灯
    stopText: function(index) {
        CT.$("contentTitle" + index).innerHTML = String(curFocus.TempData.recommendDisplayName).substring(0, 8);
    },
    /**
    * 清除每一个集数集合的样式
    */
    clearColor: function() {
        var _this = this;
        for (var i = 0; i < _this.curPageMaxEListNum; i++) {
            PAGE.removeClass(CT.$("pageNum" + i), "pageColor");
        }
    },
    /**
    *  底部推荐位点击跳转到相对应的详情页
    *  booleanUp = 0表示已经下架，下架的卡通不跳转
    *  @param num 序号
    */
    toVideoDetail: function(num) {
        var _this = this;
        if (_this.curButtomList[num].booleanUp != 0) {
            // 逻辑需要重写
            CT.toAnterRecommendUrl(curFocus.TempData);
        }
    },
}
page.init();

function backFunc() {
    var columnBackUrl = CT.getCookie("columnBackUrl");
    CT.delCookie("columnBackUrl");
    if (columnBackUrl) {
        // CT.delPreMemoryPage();
        CT.commonJumpUrl(columnBackUrl);
    } else {
        CT.backPage();
    }
}
